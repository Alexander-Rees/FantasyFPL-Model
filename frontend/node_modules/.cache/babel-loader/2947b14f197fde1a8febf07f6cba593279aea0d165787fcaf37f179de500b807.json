{"ast":null,"code":"// Define action types\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nconst REGISTER_FAIL = 'REGISTER_FAIL';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_FAIL = 'LOGIN_FAIL';\nconst LOGOUT = 'LOGOUT';\n\n// Initial state\nconst initialState = {\n  isAuthenticated: !!localStorage.getItem('token'),\n  // Check if token exists in localStorage\n  user: null,\n  error: null\n};\n\n// Reducer function\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // Store token in localStorage\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        error: null\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case LOGOUT:\n      localStorage.removeItem('token'); // Remove token from localStorage\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Action creators\nexport const registerSuccess = data => ({\n  type: REGISTER_SUCCESS,\n  payload: data\n});\nexport const registerFail = error => ({\n  type: REGISTER_FAIL,\n  payload: error\n});\nexport const loginSuccess = data => ({\n  type: LOGIN_SUCCESS,\n  payload: data\n});\nexport const loginFail = error => ({\n  type: LOGIN_FAIL,\n  payload: error\n});\nexport const logout = () => ({\n  type: LOGOUT\n});\nexport default authReducer;","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","initialState","isAuthenticated","localStorage","getItem","user","error","authReducer","state","action","type","setItem","payload","token","removeItem","registerSuccess","data","registerFail","loginSuccess","loginFail","logout"],"sources":["/Users/arees/fantasy-soccer-app/frontend/src/reducers/authReducer.js"],"sourcesContent":["// Define action types\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nconst REGISTER_FAIL = 'REGISTER_FAIL';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_FAIL = 'LOGIN_FAIL';\nconst LOGOUT = 'LOGOUT';\n\n// Initial state\nconst initialState = {\n  isAuthenticated: !!localStorage.getItem('token'), // Check if token exists in localStorage\n  user: null,\n  error: null,\n};\n\n// Reducer function\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // Store token in localStorage\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        error: null,\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case LOGOUT:\n      localStorage.removeItem('token'); // Remove token from localStorage\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\n// Action creators\nexport const registerSuccess = (data) => ({\n  type: REGISTER_SUCCESS,\n  payload: data,\n});\n\nexport const registerFail = (error) => ({\n  type: REGISTER_FAIL,\n  payload: error,\n});\n\nexport const loginSuccess = (data) => ({\n  type: LOGIN_SUCCESS,\n  payload: data,\n});\n\nexport const loginFail = (error) => ({\n  type: LOGIN_FAIL,\n  payload: error,\n});\n\nexport const logout = () => ({\n  type: LOGOUT,\n});\n\nexport default authReducer;\n"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAG,kBAAkB;AAC3C,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,MAAM,GAAG,QAAQ;;AAEvB;AACA,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAAE;EAClDC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,gBAAgB;IACrB,KAAKE,aAAa;MAChBK,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC;MACrD,OAAO;QACL,GAAGL,KAAK;QACRN,eAAe,EAAE,IAAI;QACrBG,IAAI,EAAEI,MAAM,CAACG,OAAO;QACpBN,KAAK,EAAE;MACT,CAAC;IACH,KAAKT,aAAa;IAClB,KAAKE,UAAU;MACb,OAAO;QACL,GAAGS,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACG;MAChB,CAAC;IACH,KAAKZ,MAAM;MACTG,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;MAClC,OAAO;QACL,GAAGN,KAAK;QACRN,eAAe,EAAE,KAAK;QACtBG,IAAI,EAAE;MACR,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,eAAe,GAAIC,IAAI,KAAM;EACxCN,IAAI,EAAEd,gBAAgB;EACtBgB,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAIX,KAAK,KAAM;EACtCI,IAAI,EAAEb,aAAa;EACnBe,OAAO,EAAEN;AACX,CAAC,CAAC;AAEF,OAAO,MAAMY,YAAY,GAAIF,IAAI,KAAM;EACrCN,IAAI,EAAEZ,aAAa;EACnBc,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,SAAS,GAAIb,KAAK,KAAM;EACnCI,IAAI,EAAEX,UAAU;EAChBa,OAAO,EAAEN;AACX,CAAC,CAAC;AAEF,OAAO,MAAMc,MAAM,GAAGA,CAAA,MAAO;EAC3BV,IAAI,EAAEV;AACR,CAAC,CAAC;AAEF,eAAeO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}